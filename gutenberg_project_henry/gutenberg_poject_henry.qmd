---
title: "Gutenberg Project - Henry Do"
author: "Henry Do"
date: today
lang: vi
format:
  html:
    toc: true           # Bật mục lục
    toc-depth: 2        # Mục lục đến cấp độ tiêu đề 2
    code-fold: true     # Cho phép gập/mở code
    self-contained: true
    theme: cosmo        # Giao diện thân thiện, dễ đọc
    page-layout: full   # Trình bày toàn trang
bibliography: references.bib
csl: apa.csl
---

# Đặt vấn đề

Hello

Tổng quan Được xem trực tiếp

```{r}
#| label: library
#| include: false
# Cài đặt và tải gói cần thiết

# 📦 Cài & nạp các gói cần thiết bằng pacman
if (!require("pacman")) install.packages("pacman")
pacman::p_load(janeaustenr, gutenbergr, dplyr, tidytext, stringr, ggplot2, flextable)
```
```{r}
# Tạo dữ liệu có số dòng và số chương
original_books <- austen_books() %>%
  mutate(
    linenumber = row_number(),
    chapter = cumsum(str_detect(text, "^chapter [\\divxlc]"))
  )

# Đếm số dòng mỗi chương trong từng cuốn sách
chapter_summary <- original_books %>%
  count(book, chapter, name = "số_dòng") %>%
  arrange(book, chapter)

# Hiển thị bằng flextable
flextable(chapter_summary) %>%
  set_header_labels(
    book = "Tên sách",
    chapter = "Chương",
    số_dòng = "Số dòng"
  ) %>%
  autofit()
```

# lọc sách hiển thị 
```{r}
# Tạo dữ liệu gốc
original_books <- austen_books() %>%
  mutate(
    linenumber = row_number(),
    chapter = cumsum(str_detect(text, "^chapter [\\divxlc]"))
  )

# Phân tích cho cuốn "Pride & Prejudice"
pride_summary <- original_books %>%
  filter(book == "Pride & Prejudice") %>%
  count(chapter, name = "số_dòng") %>%
  arrange(chapter)

# Tính phần trăm
total_lines <- sum(pride_summary$số_dòng)
pride_summary <- pride_summary %>%
  mutate(ty_le = round(100 * số_dòng / total_lines, 2))

# Thêm dòng Tổng cộng
pride_total <- bind_rows(
  pride_summary,
  tibble(chapter = NA, số_dòng = total_lines, ty_le = 100)
)

# Tạo chỉ số dòng của "Tổng cộng"
total_row <- which(is.na(pride_total$chapter))

# Tạo bảng flextable
flextable(pride_total) %>%
  set_header_labels(
    chapter = "Chương",
    số_dòng = "Số dòng",
    ty_le = "Tỷ lệ (%)"
  ) %>%
  italic(i = total_row) %>%
  compose(i = total_row, j = 1, value = as_paragraph("Tổng cộng")) %>%
  align(align = "center", part = "all") %>%
  autofit()
```

```{r}
# Vẽ biểu đồ số dòng theo chương cho Pride & Prejudice 📊
ggplot(pride_summary, aes(x = chapter, y = số_dòng)) +
  geom_col(fill = "steelblue") +
  labs(
    title = "Số dòng theo chương - Pride & Prejudice",
    x = "Chương",
    y = "Số dòng"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5),
    axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)
  )
```
```{r}

```


formatted_datetime <- paste0("vào lúc ", gio, ", ", thu, ", ngày ", ngay, " tháng ", thang, " năm ", nam)
#| echo: false
# Define number of participants
i <- 30  # Nhóm nghiên cứu
c <- 30  # Nhóm đối chứng
# Set seed for reproducibility
set.seed(123)
# Create dataset
df <- tibble(
id = 1:(i + c),
group = rep(c("Nhóm nghiên cứu", "Nhóm đối chứng"), times = c(i, c))
) %>%
group_by(group) %>%
mutate(
Gender = if_else(
group == "Nhóm nghiên cứu",
sample(c("Female", "Male"), n(), replace = TRUE, prob = c(0.77, 0.23)),
sample(c("Female", "Male"), n(), replace = TRUE, prob = c(0.73, 0.27))
),
Age = if_else(
group == "Nhóm nghiên cứu",
round(rnorm(n(), mean = 49.8, sd = 13.195), 0),
round(rnorm(n(), mean = 50.3, sd = 12.898), 0)
),
Age_group = case_when(
Age >= 18 & Age <= 39 ~ "18-39",
Age >= 40 & Age <= 59 ~ "40-59",
Age >= 60             ~ "≥60",
TRUE                  ~ NA_character_
),
Job = if_else(
group == "Nhóm nghiên cứu",
sample(c("Hand-based job", "Knowledge-based job", "Retired"),
n(), replace = TRUE, prob = c(0.47, 0.30, 0.23)),
sample(c("Hand-based job", "Knowledge-based job", "Retired"),
n(), replace = TRUE, prob = c(0.57, 0.23, 0.20))
),
Education = if_else(
group == "Nhóm nghiên cứu",
sample(c("Cap_1_2_3", "DH_CD_TC", "Sau_DH"),
n(), replace = TRUE, prob = c(0.18, 0.33, 0.07)),
sample(c("Cap_1_2_3", "DH_CD_TC", "Sau_DH"),
n(), replace = TRUE, prob = c(0.57, 0.40, 0.03))
),
Marital_status = if_else(
group == "Nhóm nghiên cứu",
sample(c("Single", "Married", "Divorced"),
n(), replace = TRUE, prob = c(0.17, 0.67, 0.17)),
sample(c("Single", "Married", "Divorced"),
n(), replace = TRUE, prob = c(0.17, 0.77, 0.07))
),
Insomnia_time = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 24, sd = 21.487))),
round(pmax(0, rnorm(n(), mean = 20.67, sd = 17.847)))
),
Sleep_time_a_night = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 3.7, sd = 1.52)), 1),
round(pmax(0, rnorm(n(), mean = 3.83, sd = 1.42)), 1)
),
Sleep_latency = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 53.33, sd = 20.69))),
round(pmax(0, rnorm(n(), mean = 50, sd = 18.34)))
),
Number_of_awakes_at_night = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 3.03, sd = 0.85)), 0),
round(pmax(0, rnorm(n(), mean = 3.47, sd = 0.86)), 0)
),
Time_awakes_at_night = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 67.5, sd = 30.45))),
round(pmax(0, rnorm(n(), mean = 64.5, sd = 23.35)))
),
Hieu_qua_giac_ngu = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 63.15, sd = 16.605)), 1),
round(pmax(0, rnorm(n(), mean = 64.66, sd = 134.334)), 1)
),
PSQI_score = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 14.767, sd = 2.06)), 1),
round(pmax(0, rnorm(n(), mean = 14.467, sd = 2.32)), 1)
),
# The_dong_ diagnosis using probability sampling
The_dong_ = if_else(
group == "Nhóm nghiên cứu",
sample(
c("Tâm tỳ hư", "Tâm thận bất giao", "Vị bất hòa", "Đờm nhiệt thịnh"),
size = n(), replace = TRUE,
prob = c(0.4667, 0.4333, 0.0333, 0.0667)
),
sample(
c("Tâm tỳ hư", "Tâm thận bất giao", "Vị bất hòa", "Đờm nhiệt thịnh"),
size = n(), replace = TRUE,
prob = c(0.4333, 0.5333, 0.0000, 0.0333)
)
)
) %>%
ungroup()
#| include: false
# Một số tín toán chèn inline code
# tuổi sd chung cho cả 2 nhóm
age_all_mean <- round(mean(df$Age), 1)
age_all_sd <- round(sd(df$Age), 1)
#tuổi sd cho mỗi nhóm
age_summary <- df %>%
group_by(group) %>%
summarise(
mean_age = round(mean(Age), 1),
sd_age = round(sd(Age), 1)
)
#| include: false
# Tóm tắt thống kê tuổi
tomtat_tuoi <- df %>%
group_by(group) %>%
summarise(
`Trung bình` = round(mean(Age), 1),
`Độ lệch chuẩn (sd)` = round(sd(Age), 1),
`Tối thiểu` = min(Age),
`Tối đa` = max(Age),
.groups = "drop"
) %>%
pivot_longer(-group, names_to = "Tuổi", values_to = "Giá trị") %>%
pivot_wider(names_from = group, values_from = `Giá trị`)
# Kiểm định t (t-test) cho tuổi giữa 2 nhóm
giatri_p <- t.test(Age ~ group, data = df)$p.value
giatri_p_dinhdang <- ifelse(giatri_p < 0.001, "<0.001", sprintf("%.3f", giatri_p))
# Thêm cột giá trị p
tomtat_tuoi <- tomtat_tuoi %>%
mutate(`Giá trị p` = ifelse(`Tuổi` == "Trung bình", giatri_p_dinhdang, ""))
# Tạo bảng flextable
table_ft <- tomtat_tuoi %>%
flextable() %>%
theme_vanilla() %>%
autofit() %>%
set_caption(caption = "Bảng 1: So sánh đặc điểm tuổi giữa hai nhóm nghiên cứu")
# Thêm footnote hiển thị kết quả p-value
table_ft <- table_ft %>%
add_footer_lines(values = paste("Kiểm định t-test, p =", giatri_p_dinhdang))
table_ft
#| include: false
# Biểu đồ hộp so sánh tuổi giữa hai nhóm với điểm dữ liệu
tuoi_pl <- ggplot(df, aes(x = group, y = Age, fill = group)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_jitter(width = 0.2, size = 2, alpha = 0.7) +
labs(
title = "So sánh tuổi giữa hai nhóm",
x = "Nhóm",
y = "Tuổi"
) +
theme_minimal() +
theme(
legend.position = "none",
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA)
)
#| echo: false
tuoi_pl
# Tạo slide báo cáo từ file template
my_pres  <- read_pptx("template.pptx")
myftr <- "Bệnh viện 30-4"
# Tạo slide tiêu đề
# Add title slide
my_pres <- add_slide(my_pres, layout = "Title Slide", master = "Office Theme")
# Add title and subtitle
my_pres <- ph_with(my_pres, value = "Đánh giá hiệu quả điều trị mất ngủ bằng phương pháp sử dụng châm cứu kết hợp với bài thuốc “Dưỡng tâm thang” trên bệnh nhân mất ngủ thể tâm âm hư tại Bệnh viện 30-4 ",
location = ph_location_type(type = "ctrTitle"))
my_pres <- ph_with(my_pres, value = " YHCT team BV 30-4",
location = ph_location_type(type = "subTitle"))
# Add footer
my_pres <- ph_with(my_pres, value = "ĐV chủ trì: Khoa Tâm thần kinh", location = ph_location_type(type = "ftr"))
# Add footer with date
my_pres <- ph_with(my_pres, value = format(Sys.Date(), "%d/%m/%Y"), location = ph_location_type(type = "dt"))
# Add infor to footer
my_pres <- ph_with(my_pres, value = "Đề tài cấp cơ sở", location = ph_location_type(type = "sldNum"))
ul <- unordered_list(
level_list = c(1, 1, 1,1 ),
str_list = c("Đặt vấn đề", "Đối tượng và phương pháp nghiên cứu", "Kết quả - Bàn luận", "Kết luận"),
style = fp_text(color = "black", font.size = 0) )
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
my_pres <- ph_with(my_pres, value = "Nội dung trình bày", location = ph_location_type(type = "title"))
my_pres <- ph_with(x = my_pres, value = ul,
location = ph_location_type(type = "body") )
ul <- unordered_list(
level_list = c(1, 2,  1, 2, 2,2),
str_list = c("
Câu hỏi nghiên cứu",
"Ở bệnh nhân mất ngủ, điều trị bằng phương pháp sử dụng bài thuốc sắc Dưỡng tâm thang phối hợp châm cứu kết có tốt hơn phương pháp châm cứu hay không?",
"Mục tiêu",
"Đánh giá hiệu quả điều trị mất ngủ bằng phương pháp sử dụng châm cứu kết hợp với bài thuốc Dưỡng tâm thang trên bệnh nhân mất ngủ thể tâm âm hư tại Bệnh viện 30-4",
"So sánh hiệu quả điều trị mất ngủ thể tâm âm hư bằng phương pháp sử dụng châm cứu kết hợp với bài thuốc Dưỡng tâm thang trên bệnh nhân mất ngủ thể tâm âm hư với phương pháp chỉ sử dụng châm cứu" ,
"Khảo sát tác dụng của không mong muốn phương pháp điều trị"),
style = fp_text(color = "black", font.size = 0) )
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
my_pres <- ph_with(my_pres, value = "Câu hỏi NC, mục tiêu", location = ph_location_type(type = "title"))
my_pres <- ph_with(x = my_pres, value = ul,
location = ph_location_type(type = "body") )
#| message: false
#| warning: false
#| include: false
#| paged-print: false
library(pacman)
pacman:: p_load(haven, tidyverse,labelled, ggplot2, gt,flextable,  kableExtra,officer, lubridate, glue)
current_datetime <- now()
thu <- if (wday(current_datetime) == 1) "Chủ nhật" else paste("Thứ", wday(current_datetime) - 1)
gio <- format(current_datetime, "%H:%M")
ngay <- day(current_datetime)
thang <- month(current_datetime)
nam <- year(current_datetime)
formatted_datetime <- paste0("vào lúc ", gio, ", ", thu, ", ngày ", ngay, " tháng ", thang, " năm ", nam)
#| echo: false
# Define number of participants
i <- 30  # Nhóm nghiên cứu
c <- 30  # Nhóm đối chứng
# Set seed for reproducibility
set.seed(123)
# Create dataset
df <- tibble(
id = 1:(i + c),
group = rep(c("Nhóm nghiên cứu", "Nhóm đối chứng"), times = c(i, c))
) %>%
group_by(group) %>%
mutate(
Gender = if_else(
group == "Nhóm nghiên cứu",
sample(c("Female", "Male"), n(), replace = TRUE, prob = c(0.77, 0.23)),
sample(c("Female", "Male"), n(), replace = TRUE, prob = c(0.73, 0.27))
),
Age = if_else(
group == "Nhóm nghiên cứu",
round(rnorm(n(), mean = 49.8, sd = 13.195), 0),
round(rnorm(n(), mean = 50.3, sd = 12.898), 0)
),
Age_group = case_when(
Age >= 18 & Age <= 39 ~ "18-39",
Age >= 40 & Age <= 59 ~ "40-59",
Age >= 60             ~ "≥60",
TRUE                  ~ NA_character_
),
Job = if_else(
group == "Nhóm nghiên cứu",
sample(c("Hand-based job", "Knowledge-based job", "Retired"),
n(), replace = TRUE, prob = c(0.47, 0.30, 0.23)),
sample(c("Hand-based job", "Knowledge-based job", "Retired"),
n(), replace = TRUE, prob = c(0.57, 0.23, 0.20))
),
Education = if_else(
group == "Nhóm nghiên cứu",
sample(c("Cap_1_2_3", "DH_CD_TC", "Sau_DH"),
n(), replace = TRUE, prob = c(0.18, 0.33, 0.07)),
sample(c("Cap_1_2_3", "DH_CD_TC", "Sau_DH"),
n(), replace = TRUE, prob = c(0.57, 0.40, 0.03))
),
Marital_status = if_else(
group == "Nhóm nghiên cứu",
sample(c("Single", "Married", "Divorced"),
n(), replace = TRUE, prob = c(0.17, 0.67, 0.17)),
sample(c("Single", "Married", "Divorced"),
n(), replace = TRUE, prob = c(0.17, 0.77, 0.07))
),
Insomnia_time = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 24, sd = 21.487))),
round(pmax(0, rnorm(n(), mean = 20.67, sd = 17.847)))
),
Sleep_time_a_night = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 3.7, sd = 1.52)), 1),
round(pmax(0, rnorm(n(), mean = 3.83, sd = 1.42)), 1)
),
Sleep_latency = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 53.33, sd = 20.69))),
round(pmax(0, rnorm(n(), mean = 50, sd = 18.34)))
),
Number_of_awakes_at_night = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 3.03, sd = 0.85)), 0),
round(pmax(0, rnorm(n(), mean = 3.47, sd = 0.86)), 0)
),
Time_awakes_at_night = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 67.5, sd = 30.45))),
round(pmax(0, rnorm(n(), mean = 64.5, sd = 23.35)))
),
Hieu_qua_giac_ngu = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 63.15, sd = 16.605)), 1),
round(pmax(0, rnorm(n(), mean = 64.66, sd = 134.334)), 1)
),
PSQI_score = if_else(
group == "Nhóm nghiên cứu",
round(pmax(0, rnorm(n(), mean = 14.767, sd = 2.06)), 1),
round(pmax(0, rnorm(n(), mean = 14.467, sd = 2.32)), 1)
),
# The_dong_ diagnosis using probability sampling
The_dong_ = if_else(
group == "Nhóm nghiên cứu",
sample(
c("Tâm tỳ hư", "Tâm thận bất giao", "Vị bất hòa", "Đờm nhiệt thịnh"),
size = n(), replace = TRUE,
prob = c(0.4667, 0.4333, 0.0333, 0.0667)
),
sample(
c("Tâm tỳ hư", "Tâm thận bất giao", "Vị bất hòa", "Đờm nhiệt thịnh"),
size = n(), replace = TRUE,
prob = c(0.4333, 0.5333, 0.0000, 0.0333)
)
)
) %>%
ungroup()
#| include: false
# Một số tín toán chèn inline code
# tuổi sd chung cho cả 2 nhóm
age_all_mean <- round(mean(df$Age), 1)
age_all_sd <- round(sd(df$Age), 1)
#tuổi sd cho mỗi nhóm
age_summary <- df %>%
group_by(group) %>%
summarise(
mean_age = round(mean(Age), 1),
sd_age = round(sd(Age), 1)
)
#| include: false
# Tóm tắt thống kê tuổi
tomtat_tuoi <- df %>%
group_by(group) %>%
summarise(
`Trung bình` = round(mean(Age), 1),
`Độ lệch chuẩn (sd)` = round(sd(Age), 1),
`Tối thiểu` = min(Age),
`Tối đa` = max(Age),
.groups = "drop"
) %>%
pivot_longer(-group, names_to = "Tuổi", values_to = "Giá trị") %>%
pivot_wider(names_from = group, values_from = `Giá trị`)
# Kiểm định t (t-test) cho tuổi giữa 2 nhóm
giatri_p <- t.test(Age ~ group, data = df)$p.value
giatri_p_dinhdang <- ifelse(giatri_p < 0.001, "<0.001", sprintf("%.3f", giatri_p))
# Thêm cột giá trị p
tomtat_tuoi <- tomtat_tuoi %>%
mutate(`Giá trị p` = ifelse(`Tuổi` == "Trung bình", giatri_p_dinhdang, ""))
# Tạo bảng flextable
table_ft <- tomtat_tuoi %>%
flextable() %>%
theme_vanilla() %>%
autofit() %>%
set_caption(caption = "Bảng 1: So sánh đặc điểm tuổi giữa hai nhóm nghiên cứu")
# Thêm footnote hiển thị kết quả p-value
table_ft <- table_ft %>%
add_footer_lines(values = paste("Kiểm định t-test, p =", giatri_p_dinhdang))
table_ft
#| include: false
# Biểu đồ hộp so sánh tuổi giữa hai nhóm với điểm dữ liệu
tuoi_pl <- ggplot(df, aes(x = group, y = Age, fill = group)) +
geom_boxplot(alpha = 0.5, outlier.shape = NA) +
geom_jitter(width = 0.2, size = 2, alpha = 0.7) +
labs(
title = "So sánh tuổi giữa hai nhóm",
x = "Nhóm",
y = "Tuổi"
) +
theme_minimal() +
theme(
legend.position = "none",
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA)
)
#| echo: false
tuoi_pl
# Tạo slide báo cáo từ file template
my_pres  <- read_pptx("template.pptx")
myftr <- "Bệnh viện 30-4"
# Tạo slide tiêu đề
# Add title slide
my_pres <- add_slide(my_pres, layout = "Title Slide", master = "Office Theme")
# Add title and subtitle
my_pres <- ph_with(my_pres, value = "Đánh giá hiệu quả điều trị mất ngủ bằng phương pháp sử dụng châm cứu kết hợp với bài thuốc “Dưỡng tâm thang” trên bệnh nhân mất ngủ thể tâm âm hư tại Bệnh viện 30-4 ",
location = ph_location_type(type = "ctrTitle"))
my_pres <- ph_with(my_pres, value = " YHCT team BV 30-4",
location = ph_location_type(type = "subTitle"))
# Add footer
my_pres <- ph_with(my_pres, value = "ĐV chủ trì: Khoa Tâm thần kinh", location = ph_location_type(type = "ftr"))
# Add footer with date
my_pres <- ph_with(my_pres, value = format(Sys.Date(), "%d/%m/%Y"), location = ph_location_type(type = "dt"))
# Add infor to footer
my_pres <- ph_with(my_pres, value = "Đề tài cấp cơ sở", location = ph_location_type(type = "sldNum"))
ul <- unordered_list(
level_list = c(1, 1, 1,1 ),
str_list = c("Đặt vấn đề", "Đối tượng và phương pháp nghiên cứu", "Kết quả - Bàn luận", "Kết luận"),
style = fp_text(color = "black", font.size = 0) )
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
my_pres <- ph_with(my_pres, value = "Nội dung trình bày", location = ph_location_type(type = "title"))
my_pres <- ph_with(x = my_pres, value = ul,
location = ph_location_type(type = "body") )
ul <- unordered_list(
level_list = c(1, 2,  1, 2, 2,2),
str_list = c("
Câu hỏi nghiên cứu",
"Ở bệnh nhân mất ngủ, điều trị bằng phương pháp sử dụng bài thuốc sắc Dưỡng tâm thang phối hợp châm cứu kết có tốt hơn phương pháp châm cứu hay không?",
"Mục tiêu",
"Đánh giá hiệu quả điều trị mất ngủ bằng phương pháp sử dụng châm cứu kết hợp với bài thuốc Dưỡng tâm thang trên bệnh nhân mất ngủ thể tâm âm hư tại Bệnh viện 30-4",
"So sánh hiệu quả điều trị mất ngủ thể tâm âm hư bằng phương pháp sử dụng châm cứu kết hợp với bài thuốc Dưỡng tâm thang trên bệnh nhân mất ngủ thể tâm âm hư với phương pháp chỉ sử dụng châm cứu" ,
"Khảo sát tác dụng của không mong muốn phương pháp điều trị"),
style = fp_text(color = "black", font.size = 0) )
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
my_pres <- ph_with(my_pres, value = "Câu hỏi NC, mục tiêu", location = ph_location_type(type = "title"))
my_pres <- ph_with(x = my_pres, value = ul,
location = ph_location_type(type = "body") )
# Slide Đặt vấn đề
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
# add title of slide
my_pres <- ph_with(my_pres, value = "Đặt vấn đề", location = ph_location_type(type = "title"))
# add body of slide
my_pres <- ph_with(my_pres, value = c(
"Mất ngủ kéo dài sẽ gây căng thẳng, lo âu, làm tăng nặng nhiều bệnh mạn tính và ảnh hưởng trầm trọng tới năng suất lao động và gia tăng chi phí xã hội, chăm sóc y tế.",
"Y học hiện điều trị chủ yếu tập trung vào thuốc giảm lo âu, an thần, khi sử dụng lâu dài những thuốc đó dần dẫn đến tình trạng lệ thuộc vào thuốc, mệt mỏi, suy giảm trí nhớ, ảnh hưởng đến chất lượng cuộc sống.
",
"Bài thuốc “Dưỡng tâm thang là bài cổ phương có nguồn gốc từ sách “Cổ kim y thống” của Từ Xuân Phủ có tác dụng dưỡng huyết tư âm, dưỡng tâm an thần. Là một trong những phương pháp đã được chứng minh hiệu quả điều trị mất ngủ.
",
"Phương pháp châm cứu sử dụng các huyệt thường sử dụng là Nội quan, Thần môn, Tam âm giao, An miên, Dũng tuyền mà một số huyệt đặc biệt đã được chứng minh hiệu quả trên lâm sàng và nhiều nghiên cứu trong và ngoài nước.",
"Chúng tôi thực hiện nghiên cứu Đánh giá hiệu quả điều trị mất ngủ bằng phương pháp sử dụng châm cứu kết hợp với bài thuốc Dưỡng tâm thang trên bệnh nhân mất ngủ thể Tâm âm hư tại Bệnh viện 30-4"
), location = ph_location_type(type = "body"))
# Slide đối tượng và phương pháp nghiên cứu
ul <- unordered_list(
level_list = c(1, 2,  1, 2, 2,2,2, 1, 2, 2, 2),
str_list = c(
"Thiết kế ngiên cứu",
"Nghiên cứu can thiệp lâm sàng, tiến cứu, so sánh trước sau điều trị và so sánh với nhóm đối chứng.",
"Tiêu chuẩn chọn",
"Bệnh nhân thoả mãn theo tiêu chuẩn chẩn đoán mất ngủ không thực tổn của ICD-10 ",
"Đánh giá chất lượng giấc ngủ theo thang điểm Pittsburgh (PSQI) tổng điểm >5 điểm",
"Bệnh nhân đồng ý và tự nguyện tham gia nghiên cứu sử dụng phác đồ nghiên cứu
",
"Bệnh nhân thất miên thể tâm âm hư với triệu chứng và quy nạp theo tứ chẩn
",
"Tiêu chuẩn loại trừ:",
"BN có kèm theo rối loạn trầm cảm nặng hoặc bệnh lý cấp tính",
"BN không hợp tác điều trị",
"BN không tái khám, không được đánh giá kết quả sau điều trị."
),
style = fp_text(color = "black", font.size = 0) )
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
my_pres <- ph_with(my_pres, value = "Đối tượng và phương pháp nghiên cúu", location = ph_location_type(type = "title"))
my_pres <- ph_with(x = my_pres, value = ul,
location = ph_location_type(type = "body") )
## Add more slide
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
# add title of slide
my_pres <- ph_with(my_pres, value = "Current study", location = ph_location_type(type = "title"))
# add body of slide
my_pres <- ph_with(my_pres, value = c(
"Thời gian đi vào giấc ngủ",
"Thời lượng giấc ngủ",
"Hiệu quả giấc ngủ (hiệu suất)",
"Rối loạn trong giấc ngủ",
"Chất lượng giấc ngủ theo đánh giá chủ quan"
), location = ph_location_type(type = "body"))
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
my_pres <- ph_with(my_pres, value = "cho ggplot vô body", location = ph_location_type(type = "title"))
my_pres <- ph_with(x = my_pres, tuoi_pl,
location = ph_location_type(type = "body") )
#| eval: false
#| include: false
# add table slide
my_pres <- add_slide(my_pres, layout = "Title and Content", master = "Office Theme") #them slides
my_pres <- ph_with(my_pres, value = "Đặc điểm giới tính -giữa ", location = ph_location_type(type = "title")) #them title
# summary bang
gender_summary <- df %>%
group_by(Gender) %>%
summarise(
Count = n(),
Percentage = round((n() / nrow(df)) * 100, 1)
) %>%
ungroup()
# Create and format the flextable
ft <- flextable(gender_summary) %>%
set_header_labels(gender = "Giới tính", Count = "n", Percentage = "%")  %>%
fontsize(size = 18, part = "header") %>% bold(bold = TRUE, part = "header") %>% bg( bg = "#D3D3D3", part = "header") %>%
fontsize(size = 18, part = "body") %>%   autofit()
ft <- width(ft, width = 5, unit = "cm")
# Get slide dimensions in inches
slide_dims <- slide_size(my_pres)
slide_width <- slide_dims$width
slide_height <- slide_dims$height
# Get flextable dimensions
table_dims <- dim(ft)
table_width <- sum(table_dims$widths)
table_height <- sum(table_dims$heights)
# Calculate positions to center the table
left_pos <- (slide_width - table_width) / 2
top_pos <- (slide_height - table_height) / 2
# Add the flextable to the slide at the calculated position
my_pres <- ph_with(my_pres, value = ft, location = ph_location(left = left_pos, top = top_pos))
gender_summary
gender_summary
#| message: false
#| warning: false
#| include: false
#| paged-print: false
library(pacman)
pacman:: p_load(haven, tidyverse,labelled, ggplot2, gt,flextable,  kableExtra,officer, lubridate, glue)
current_datetime <- now()
thu <- if (wday(current_datetime) == 1) "Chủ nhật" else paste("Thứ", wday(current_datetime) - 1)
gio <- format(current_datetime, "%H:%M")
ngay <- day(current_datetime)
thang <- month(current_datetime)
nam <- year(current_datetime)
formatted_datetime <- paste0("vào lúc ", gio, ", ", thu, ", ngày ", ngay, " tháng ", thang, " năm ", nam)

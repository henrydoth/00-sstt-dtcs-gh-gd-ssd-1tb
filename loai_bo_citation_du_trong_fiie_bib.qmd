---
title: "Loai_bo_citation_du_trong_fiie_bib"
author: "Henry Do"
date: today
format:
  html:
    self-contained: true
    toc: true
    toc-location: right
    bibliography: cleaned_references_final.bib
    csl: ama.csl
    number-sections: true
    citation-location: margin
    code-fold: false
    code-summary: "Hi·ªÉn th·ªã/R√∫t g·ªçn m√£ R"
editor: source
---

# --- C√†i ƒë·∫∑t v√† n·∫°p th∆∞ vi·ªán c·∫ßn thi·∫øt ---
```{r}
if (!requireNamespace("bib2df", quietly = TRUE))
  install.packages("bib2df")
if (!requireNamespace("DT", quietly = TRUE))
  install.packages("DT")

library(bib2df)
library(stringr)
library(dplyr)
library(flextable)
library(glue)
library(htmltools)  # d√πng ƒë·ªÉ escape HTML
```

# Thi·∫øt l·∫≠p t√™n file
```{r}
#| echo: true
qmd_file <- "sstt_dtcs_quato_words_output.qmd"
bib_file <- "sstt_reference.bib"
```

```{r}
cit_keys <- readLines(qmd_file, encoding = "UTF-8") %>%
  str_extract_all("@[a-zA-Z0-9_\\-]+") %>%
  unlist() %>%
  str_remove("^@") %>%
  unique()

bib_all <- bib2df(bib_file)

bib_labeled <- bib_all %>%
  mutate(STATUS = if_else(BIBTEXKEY %in% cit_keys, "ƒê√£ d√πng", "B·ªã lo·∫°i"))

summary_stat <- bib_labeled %>%
  summarise(
    tong = n(),
    dung = sum(STATUS == "ƒê√£ d√πng"),
    loai = sum(STATUS == "B·ªã lo·∫°i"),
    tile = round(loai / tong * 100, 1)
  ) %>%
  as.list()
```

# In th√¥ng tin th·ªëng k√™ ra HTML
```{r}
summary_text <- glue(
  "### \U0001F4CA B√ÅO C√ÅO T√åNH H√åNH S·ª¨ D·ª§NG CITATION\n\n",
  "- T·ªïng s·ªë m·ª•c trong file BibTeX g·ªëc: **{summary_stat$tong}**\n",
  "- S·ªë citation ƒë∆∞·ª£c s·ª≠ d·ª•ng trong t√†i li·ªáu: **{summary_stat$dung}**\n",
  "- S·ªë citation KH√îNG ƒë∆∞·ª£c s·ª≠ d·ª•ng (b·ªã lo·∫°i): **{summary_stat$loai}**\n",
  "- T·ª∑ l·ªá b·ªã lo·∫°i b·ªè: **{summary_stat$tile}%**"
)
cat(summary_text)
```

# T·∫°o b·∫£ng ƒë·∫πp b·∫±ng flextable
```{r}
bib_labeled %>%
  select(BIBTEXKEY, AUTHOR, TITLE, YEAR, JOURNAL, STATUS) %>%
  mutate(
    AUTHOR = sapply(AUTHOR, function(x) paste(x, collapse = ", ")),
    AUTHOR = stringr::str_trunc(AUTHOR, 50),
    TITLE = stringr::str_trunc(TITLE, 60)
  ) %>%
  flextable() %>%
  set_caption("üë∂ Danh s√°ch citation v√† tr·∫°ng th√°i s·ª≠ d·ª•ng") %>%
  autofit()
```

### üìé N·ªôi dung g·ªëc file BibTeX
```{r}
#| results: asis
#| echo: false
bib_raw <- readLines(bib_file, encoding = "UTF-8")
cat("```bibtex\n")
cat(bib_raw, sep = "\n")
cat("\n```")
```

### üìé N·ªôi dung BibTeX "ƒê√£ d√πng"
```{r}
#| results: asis
#| echo: false
bib_used_keys <- bib_labeled %>% filter(STATUS == "ƒê√£ d√πng") %>% pull(BIBTEXKEY)
bib_lines <- readLines(bib_file, encoding = "UTF-8")
entry_starts <- grep("^@", bib_lines)
entry_ends <- c(entry_starts[-1] - 1, length(bib_lines))
entries <- mapply(function(start, end) paste(bib_lines[start:end], collapse = "\n"), entry_starts, entry_ends, SIMPLIFY = FALSE)
used_entries <- Filter(function(entry) any(str_detect(entry, paste0("@.+\\{(", paste(bib_used_keys, collapse = "|"), "),"))), entries)
cat("```bibtex\n")
cat(paste(used_entries, collapse = "\n\n"))
cat("\n```")
```

### üìé N·ªôi dung BibTeX "B·ªã lo·∫°i"
```{r}
#| results: asis
#| echo: false
bib_loai_keys <- bib_labeled %>% filter(STATUS == "B·ªã lo·∫°i") %>% pull(BIBTEXKEY)
loai_entries <- Filter(function(entry) any(str_detect(entry, paste0("@.+\\{(", paste(bib_loai_keys, collapse = "|"), "),"))), entries)
cat("```bibtex\n")
cat(paste(loai_entries, collapse = "\n\n"))
cat("\n```")
```

### üìé N·ªôi dung to√†n b·ªô BibTeX (ƒë√£ s·∫Øp x·∫øp theo TITLE & c·∫£nh b√°o tr√πng key)
```{r}
#| results: asis
#| echo: false
bib_lines <- readLines(bib_file, encoding = "UTF-8")
entry_starts <- grep("^@", bib_lines)
entry_ends <- c(entry_starts[-1] - 1, length(bib_lines))
entries <- mapply(function(start, end) paste(bib_lines[start:end], collapse = "\n"), entry_starts, entry_ends, SIMPLIFY = FALSE)

keys <- sapply(entries, function(entry) str_match(entry, "@\\w+\\{([^,]+),")[[2]])
titles <- sapply(entries, function(entry) str_match(entry, "(?i)title\\s*=\\s*[{\"]([^\"}]+)[\"}]")[[2]])

duplicated_keys <- keys[duplicated(keys)]
if (length(duplicated_keys) > 0) {
  warning_text <- glue("### ‚ö†Ô∏è C·∫£nh b√°o: C√≥ {length(duplicated_keys)} key b·ªã tr√πng l·∫∑p!\n\n",
                       "- C√°c key tr√πng: `{paste(unique(duplicated_keys), collapse = '`, `')}`\n")
  cat(warning_text)
}

entries_sorted <- entries[order(tolower(titles))]
cat("### üìö T·∫§T C·∫¢ C√ÅC M·ª§C TRONG FILE `.bib` (s·∫Øp theo ti√™u ƒë·ªÅ - TITLE)\n\n")
cat("```bibtex\n")
cat(paste(entries_sorted, collapse = "\n\n"))
cat("\n```")
```

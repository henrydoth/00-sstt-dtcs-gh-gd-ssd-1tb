}
cau_bang_mci <- glue_collapse(purrr::compact(c(
mota_theo_nhom("MCI", "Chặt"),
mota_theo_nhom("MCI", "Khá"),
mota_theo_nhom("MCI", "Vừa"),
mota_theo_nhom("MCI", "Yếu")
)), sep = " ")
cau_bang_sstt <- glue_collapse(purrr::compact(c(
mota_theo_nhom("Sa sút trí tuệ", "Chặt"),
mota_theo_nhom("Sa sút trí tuệ", "Khá"),
mota_theo_nhom("Sa sút trí tuệ", "Vừa"),
mota_theo_nhom("Sa sút trí tuệ", "Yếu")
)), sep = " ")
cor_wide_compare <- cor_by_group %>%
select(Nhóm, Test.thần.kinh, Hệ.số.tương.quan.r) %>%
pivot_wider(names_from = Nhóm, values_from = Hệ.số.tương.quan.r)
test_tuong_quan_cao_hon_sstt <- cor_wide_compare %>%
filter(`Sa sút trí tuệ` - MCI >= 0.1) %>%
arrange(desc(`Sa sút trí tuệ` - MCI)) %>%
pull(Test.thần.kinh)
if (length(test_tuong_quan_cao_hon_sstt) > 0) {
test_nhanh <- glue_collapse(head(test_tuong_quan_cao_hon_sstt, 3), sep = ", ", last = " và ")
cau_inline_so_sanh_sstt_mci <- glue("Một số test như {test_nhanh} có tương quan mạnh hơn ở nhóm sa sút trí tuệ.")
} else {
cau_inline_so_sanh_sstt_mci <- "Không có test nào có tương quan mạnh hơn rõ rệt giữa hai nhóm."
}
#| label: mức độ hoàn thành các tests
# 🧠 Danh sách các biến test thần kinh nhận thức
neuro_vars <- c(
"Im.recall1", "de.recall1", "de.reg1",
"TMT.A.time", "TMT.B.time",
"DS.forward1", "DS.backrward1",
"animal.test1", "clock.drawing1"
)
# 📝 Nhãn tiếng Việt tương ứng
test_labels_map <- c(
"Im.recall1" = "Nhớ lại ngay",
"de.recall1" = "Nhớ lại có trì hoãn",
"de.reg1" = "Nhận biết có trì hoãn",
"TMT.A.time" = "Nối số",
"TMT.B.time" = "Nối số-chữ",
"DS.forward1" = "Đọc chuỗi số xuôi",
"DS.backrward1" = "Đọc chuỗi số ngược",
"animal.test1" = "Lưu loát ngôn ngữ",
"clock.drawing1" = "Vẽ đồng hồ"
)
# ✨ Thứ tự mong muốn để hiển thị nhất quán
label_order <- c(
"Nhớ lại ngay", "Nhớ lại có trì hoãn", "Nhận biết có trì hoãn",
"Nối số", "Nối số-chữ",
"Đọc chuỗi số xuôi", "Đọc chuỗi số ngược",
"Lưu loát ngôn ngữ", "Vẽ đồng hồ"
)
# 📊 Tính toán tỉ lệ hoàn thành theo nhóm
completion_summary <- purrr::map_dfr(neuro_vars, function(var) {
df %>%
group_by(phan_loan_roi_loan_nhan_thuc) %>%
summarise(
Biến = var,
Hoàn.thành = round(100 * sum(!is.na(.data[[var]])) / n(), 1),
.groups = "drop"
)
})
# 📋 Tạo bảng flextable
completion_wide <- completion_summary %>%
select(Nhóm = phan_loan_roi_loan_nhan_thuc, Biến, Hoàn.thành) %>%
pivot_wider(names_from = Nhóm, values_from = Hoàn.thành) %>%
mutate(`Test thần kinh` = factor(test_labels_map[Biến], levels = label_order)) %>%
arrange(`Test thần kinh`) %>%
select(`Test thần kinh`, `MCI`, `Sa sút trí tuệ`)
ft_hoanthanh <- flextable(completion_wide) %>%
set_header_labels(
`Test thần kinh` = "Test thần kinh nhận thức",
`MCI` = "MCI (%)",
`Sa sút trí tuệ` = "Sa sút trí tuệ (%)"
) %>%
colformat_num(decimal.mark = ",", suffix = "%") %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 11, part = "all") %>%
autofit() %>%
#set_caption("Bảng: Tỉ lệ hoàn thành các test thần kinh nhận thức theo nhóm chẩn đoán") %>%
set_table_properties(width = 1, layout = "autofit")
# 📊 Chuẩn bị và vẽ biểu đồ ggplot theo đúng thứ tự
label_order <- c(
"Nhớ lại ngay", "Nhớ lại có trì hoãn", "Nhận biết có trì hoãn",
"Nối số", "Nối số-chữ",
"Đọc chuỗi số xuôi", "Đọc chuỗi số ngược",
"Lưu loát ngôn ngữ", "Vẽ đồng hồ"
)
plot_hoanthanh <- completion_summary %>%
mutate(
Nhóm = factor(phan_loan_roi_loan_nhan_thuc, levels = c("MCI", "Sa sút trí tuệ")),
Nhãn = factor(test_labels_map[Biến], levels = rev(label_order))
) %>%
ggplot(aes(x = Nhãn, y = Hoàn.thành, fill = Nhóm)) +
geom_col(position = position_dodge(width = 0.8), width = 0.7) +
geom_text(
aes(label = paste0(Hoàn.thành, "%")),
position = position_dodge(width = 0.8),
hjust = -0.5,  # 👈 Nhãn nằm bên phải ngoài cột
size = 3.5,
family = "Times New Roman"
) +
coord_flip(clip = "off") +
scale_x_discrete(expand = expansion(mult = c(0.2, 0.2))) +
scale_fill_brewer(palette = "Pastel2") +
expand_limits(y = max(completion_summary$Hoàn.thành) + 15) +  # 👈 Thêm khoảng trống cho nhãn
labs(
# title = "Tỉ lệ hoàn thành các test thần kinh nhận thức",
x = NULL, y = "Tỉ lệ hoàn thành (%)", fill = "Nhóm"
) +
theme_minimal(base_family = "Times New Roman") +
theme(
plot.title = element_text(hjust = 0.5, face = "bold", size = 13),
axis.text = element_text(size = 10),
legend.position = "top"
)
# ✏️ Nhận xét tự động
nhom_thap_mci <- completion_summary %>%
filter(phan_loan_roi_loan_nhan_thuc == "MCI") %>%
arrange(Hoàn.thành) %>%
slice(1)
nhom_thap_sstt <- completion_summary %>%
filter(phan_loan_roi_loan_nhan_thuc == "Sa sút trí tuệ") %>%
arrange(Hoàn.thành) %>%
slice(1)
cau_hoanthanh_bang <- glue(
"Tỉ lệ hoàn thành nhìn chung cao, từ khoảng ",
"{min(completion_summary$Hoàn.thành)}% đến {max(completion_summary$Hoàn.thành)}%. ",
"Test {test_labels_map[nhom_thap_mci$Biến]} thấp nhất ở nhóm MCI ({nhom_thap_mci$Hoàn.thành}%), ",
"và test {test_labels_map[nhom_thap_sstt$Biến]} thấp nhất ở nhóm sa sút trí tuệ ({nhom_thap_sstt$Hoàn.thành}%)."
)
cau_hoanthanh_ggplot <- glue(
"Biểu đồ cho thấy phần lớn test được thực hiện với tỉ lệ cao trong cả hai nhóm, ",
"chỉ có một số test gặp khó khăn hơn ở nhóm MCI hoặc sa sút trí tuệ."
)
ft_hoanthanh
plot_hoanthanh
# 📦 Chuẩn bị dữ liệu và mã hóa thứ bậc
df_ord <- df %>%
filter(
!is.na(mmse_group),
!is.na(lam_sang_group),
mmse_group != "Bình thường"  # ❌ Loại bỏ nhóm Bình thường
) %>%
mutate(
mmse_group = droplevels(mmse_group),
lam_sang_group = droplevels(lam_sang_group),
mmse_num = as.numeric(mmse_group),
lam_sang_num = as.numeric(lam_sang_group)
)
# 📈 Kiểm định Spearman và Kendall
test_spearman <- cor.test(df_ord$mmse_num, df_ord$lam_sang_num, method = "spearman")
test_kendall  <- cor.test(df_ord$mmse_num, df_ord$lam_sang_num, method = "kendall")
rho <- round(test_spearman$estimate, 2)
pval_s <- test_spearman$p.value
pval_s_fmt <- ifelse(pval_s < 0.001, "< 0.001", sprintf("%.3f", pval_s))
tau <- round(test_kendall$estimate, 2)
pval_k <- test_kendall$p.value
pval_k_fmt <- ifelse(pval_k < 0.001, "< 0.001", sprintf("%.3f", pval_k))
# 🧾 Tạo bảng tần suất dạng chéo
tab_ordinal_long <- df_ord %>%
count(`Phân loại lâm sàng` = lam_sang_group, `Phân độ MMSE` = mmse_group) %>%
group_by(`Phân loại lâm sàng`) %>%
mutate(
Tỷ_lệ = round(100 * n / sum(n), 1),
Tần_suất = glue("{n} ({Tỷ_lệ}%)")
) %>%
select(-n, -Tỷ_lệ) %>%
pivot_wider(names_from = `Phân độ MMSE`, values_from = Tần_suất, values_fill = "-") %>%
mutate(
`Giá trị p` = c(pval_s_fmt, rep("", n() - 1)),
`Spearman ρ` = c(rho, rep("", n() - 1)),
`Kendall τ` = c(tau, rep("", n() - 1))
)
# 📊 Bảng flextable
ft_ord <- flextable(tab_ordinal_long) %>%
set_caption("Bảng: Phân bố chéo giữa phân độ MMSE và phân loại lâm sàng (loại BT)") %>%
autofit() %>%
font(fontname = "Times New Roman", part = "all") %>%
fontsize(size = 11, part = "all") %>%
align(align = "center", part = "all")
# 🎨 Nhãn rút gọn
short_labels <- c(
"Suy giảm nhận thức nhẹ" = "SGNT nhẹ",
"Sa sút trí tuệ nhẹ" = "SSTT nhẹ",
"Sa sút trí tuệ trung bình" = "SSTT TB",
"Sa sút trí tuệ nặng" = "SSTT nặng"
)
# 🌡️ Heatmap với màu pastel
df_heatmap <- df_ord %>%
count(lam_sang_group, mmse_group)
plot_heat <- ggplot(df_heatmap, aes(x = mmse_group, y = lam_sang_group, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 4) +
scale_fill_gradient(low = "#a8edea", high = "#fed6e3") +
scale_x_discrete(labels = short_labels[levels(df_ord$mmse_group)]) +
scale_y_discrete(labels = short_labels[levels(df_ord$lam_sang_group)]) +
labs(x = "Phân độ theo MMSE", y = "Phân độ theo tiêu chuẩn lâm sàng", fill = "Tần suất") +
theme_minimal(base_family = "Times New Roman") +
theme(axis.text = element_text(size = 11), panel.grid = element_blank())
# 🔵 Scatter ordinal pastel
plot_scatter <- ggplot(df_ord, aes(x = mmse_num, y = lam_sang_num)) +
geom_jitter(width = 0.2, height = 0.2, alpha = 0.6, color = "#40E0D0") +  # xanh ngọc
geom_smooth(method = "lm", se = FALSE, color = "#FF6F61", linetype = "dashed") +  # cam đào
scale_x_continuous(
breaks = seq_along(levels(df_ord$mmse_group)),
labels = short_labels[levels(df_ord$mmse_group)]
) +
scale_y_continuous(
breaks = seq_along(levels(df_ord$lam_sang_group)),
labels = short_labels[levels(df_ord$lam_sang_group)]
) +
labs(x = "Phân độ MMSE", y = "Phân loại lâm sàng") +
theme_minimal(base_family = "Times New Roman") +
theme(axis.text = element_text(size = 11), panel.grid = element_blank())
# 📝 Inline codes mô tả
cau_chen_bieu_do_heatmap <- glue(
"Biểu đồ thể hiện sư phân bố chéo cho thấy mối liên hệ giữa phân độ giai đoạn bệnh theo tiêu chuẩn MMSE và phân độ theo tiêu chuẩn lâm sàng, hay còn gọi tiêu chuẩn vàng. Biểu đồ cho thấy hệ số Spearman ρ = {rho}, Kendall τ = {tau}, với p = {pval_s_fmt}. ",
if (pval_s < 0.05) "Kết quả có ý nghĩa thống kê." else "Kết quả không có ý nghĩa thống kê."
)
cau_bieudo_ordinal <- glue(
"Biểu đồ minh họa phân bố tập trung ở các mức độ tương ứng, ",
"cho thấy xu hướng đồng biến giữa phân độ giai đoạn bệnh theo tiêu chuẩn MMSE và phân độ theo tiêu chuẩn lâm sàng."
)
cau_chen_bieu_do_gop_2_loai  <- glue(
"Biểu đồ bên trái  thể hiện sư phân bố chéo cho thấy mối liên hệ giữa phân độ giai đoạn bệnh theo tiêu chuẩn MMSE và phân độ theo tiêu chuẩn lâm sàng, hay còn gọi tiêu chuẩn vàng. Biểu đồ cho thấy hệ số Spearman ρ = {rho}, Kendall τ = {tau}, với p = {pval_s_fmt}. ",
if (pval_s < 0.05) "Kết quả có ý nghĩa thống kê." else "Kết quả không có ý nghĩa thống kê. ",  "Biểu đồ bên phải minh họa phân bố tập trung ở các mức độ tương ứng, ", "cho thấy xu hướng đồng biến giữa phân độ giai đoạn bệnh theo tiêu chuẩn MMSE và phân độ theo tiêu chuẩn lâm sàng."
)
#| label: plot_heat_scatter_ordinal
#| fig-cap: "Biểu đồ heatmap và scatter ordinal thể hiện mối liên hệ giữa phân độ MMSE và giai đoạn lâm sàng"
#| echo: true
#| message: false
#| warning: false
#| fig-align: center
#| out.width: "100%"
pacman::p_load(patchwork)  # 📦 Ghép biểu đồ
# 🌈 Nhãn rút gọn
short_labels <- c(
"Suy giảm nhận thức nhẹ" = "SGNT nhẹ",
"Sa sút trí tuệ nhẹ" = "SSTT nhẹ",
"Sa sút trí tuệ trung bình" = "SSTT TB",
"Sa sút trí tuệ nặng" = "SSTT nặng"
)
# 🌡️ Heatmap pastel
df_heatmap <- df_ord %>%
count(lam_sang_group, mmse_group)
plot_heat <- ggplot(df_heatmap, aes(x = mmse_group, y = lam_sang_group, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 4) +
scale_fill_gradient(low = "#a8edea", high = "#fed6e3") +  # pastel xanh-hồng
scale_x_discrete(labels = short_labels[levels(df_ord$mmse_group)]) +
scale_y_discrete(labels = short_labels[levels(df_ord$lam_sang_group)]) +
labs(x = "Phân độ theo MMSE", y = "Phân độ trên lâm sàng", fill = "Tần suất") +
theme_minimal(base_family = "Times New Roman") +
theme(
axis.text = element_text(size = 11),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank()
)
# 🔵 Scatter ordinal pastel
plot_scatter <- ggplot(df_ord, aes(x = mmse_num, y = lam_sang_num)) +
geom_jitter(width = 0.2, height = 0.2, alpha = 0.6, color = "#40E0D0") +  # turquoise
geom_smooth(method = "lm", se = FALSE, color = "#FF6F61", linetype = "dashed") +  # coral
scale_x_continuous(
breaks = seq_along(levels(df_ord$mmse_group)),
labels = short_labels[levels(df_ord$mmse_group)]
) +
scale_y_continuous(
breaks = seq_along(levels(df_ord$lam_sang_group)),
labels = short_labels[levels(df_ord$lam_sang_group)]
) +
labs(x = "Phân độ theo MMSE", y = "Phân độ trên lâm sàng") +
theme_minimal(base_family = "Times New Roman") +
theme(
axis.text = element_text(size = 11),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank()
)
# 🌈 Nhãn rút gọn
short_labels <- c(
"Suy giảm nhận thức nhẹ" = "SGNT nhẹ",
"Sa sút trí tuệ nhẹ" = "SSTT nhẹ",
"Sa sút trí tuệ trung bình" = "SSTT TB",
"Sa sút trí tuệ nặng" = "SSTT nặng"
)
# 🌡️ Heatmap pastel
df_heatmap <- df_ord %>%
count(lam_sang_group, mmse_group)
plot_heat <- ggplot(df_heatmap, aes(x = mmse_group, y = lam_sang_group, fill = n)) +
geom_tile(color = "white") +
geom_text(aes(label = n), color = "black", size = 4) +
scale_fill_gradient(low = "#a8edea", high = "#fed6e3") +  # pastel xanh-hồng
scale_x_discrete(labels = short_labels[levels(df_ord$mmse_group)]) +
scale_y_discrete(labels = short_labels[levels(df_ord$lam_sang_group)]) +
labs(x = "Phân độ MMSE", y = "Phân loại lâm sàng", fill = "Tần suất") +
theme_minimal(base_family = "Times New Roman") +  # ✅ hoàn chỉnh font
theme(
axis.text = element_text(size = 11),
axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank()
)
plot_heat + plot_scatter + plot_layout(ncol = 2)
plot_heat
plot_scatter
#| include: false
data <- data.frame(
Ten_bien = c(
"Tuổi", "Giới tính", "Tuổi khởi phát", "Thời gian phát hiện bệnh",
"Trình độ học vấn", "Nghề nghiệp trước đây", "Tình trạng hôn nhân",
"Tiền sử gia đình", "Bệnh đi kèm", "Thang MMSE", "Tiểu thang MMSE",
"Word List", "Digit span forward", "Digit span backward",
"TMT-A", "TMT-B", "Khảo sát sự lưu loát ngôn ngữ.",
"Trắc nghiệm vẽ đồng hồ", "Chẩn đoán", "Giai đoạn"
),
Loai_bien = c(
"Định lượng", "Định tính", "Định tính", "Định lượng",
"Định tính", "Định tính", "Định tính", "Định tính", "Định tính",
"Định lượng", "Định lượng", "Định lượng", "Định lượng", "Định lượng",
"Định tính", "Định tính", "Định lượng", "Định lượng", "Định tính", "Định tính"
),
Gia_tri_don_vi = c(
"Năm", "Nam/Nữ", "Khởi phát sớm/khởi phát muộn", "Năm",
"Cấp 1, cấp 2, cấp 3, cao đẳng/đại học, không xác định",
"Toàn thời gian, bán thời gian, về hưu",
"Có chồng vợ, góa, ly thân/ly hôn", "Có bị SSTT", "Có, không",
"Giá trị từ 0 - 30", "Tùy thuộc chức năng nhận thức",
"Giá trị từ 0 – 30", "Giá trị từ 0 – 14", "Giá trị từ 0 – 12",
"Thời gian đạt khi dưới 150 giây", "Thời gian đạt khi dưới 300 giây",
"Số lượng các con vật người làm trắc nghiệm kể tên",
"1 đến 6 điểm theo thang Shulman", "SCI, MCI và SSTT",
"Giai đoạn nhẹ, trung bình, nặng"
)
)
#| echo: false
ft <- data %>%
flextable() %>%
set_header_labels(
Ten_bien = "Tên biến",
Loai_bien = "Loại biến",
Gia_tri_don_vi = "Giá trị / Đơn vị"
) %>%
autofit() %>%
set_table_properties(width = 1, layout = "autofit") %>%
font(fontname = "Times New Roman", part = "all")  %>%
fontsize(size = 13, part = "all")
ft
#| echo: false
ft_tuoi
#| echo: false
tuoi_gp
#| message: false
#| warning: false
#| paged-print: false
ft_freq_p
#| echo: false
#| message: false
#| warning: false
#| paged-print: false
nhom_tuoi_gp
ft_gender
#| echo: false
#| message: false
#| warning: false
#| paged-print: false
gioitinh_bar_percent
#| echo: false
ft_edu
hocvan_bar_percent
#| echo: false
ft_mmse
#| echo: false
ggplot_mmse
#| label: Biểu đồ  phân loại suy giảm nhận thức và sa sút trí tuệ theo MMSE chen kết quả
#| echo: false
ggplot_mmse
#| echo: false
ft_nhanthuc_group
#| echo: false
plot_nhanthuc_group
#| echo: false
ft_corr_long
#| echo: false
plot_corr_grouped
#| label: B mức độ hoàn thành bộ test thần kinh nhận thức
#| echo: false
ft_hoanthanh
#| label: BD hoàn thành bộ test thần kinh nhận thức
#| echo: false
plot_hoanthanh
#| label: Biểu đồ heatmap
#| message: false
#| warning: false
#| include: false
plot_heat
#| label: Sự tương đồng giữa phân độ MMSE và phân loại lâm sàng theo tiêu chuẩn lâm sàng kết quả
#| echo: false
plot_scatter
my_pres  <- read_pptx("sstt_SLIDE_input.pptx")
myftr <- "Bệnh viện 30-4"
#| label: slide vai tro test than kinh nhan thuc
# add slide
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
# add title of slide
my_pres <- ph_with(my_pres, value = "Vai trò test thần kinh nhận thức", location = ph_location_type(type = "title"))
# add body of slide
my_pres <- ph_with(my_pres, value = c("Việc phân tích tốt các thang điểm tâm thần kinh này hỗ trợ các bác sĩ lâm sàng trong việc chẩn đoán, chẩn đoán phân biệt thể bệnh" ,  "xác định lĩnh vực nhận thức bị khiếm khuyết, mức độ nặng","Chọn lựa các phương pháp can thiệp nhận thức không dùng thuốc như tập luyện nhận thức (cognitive training), phục hồi nhận thức (cognitive rehabilitation), kích thích nhận thức (cognitive stimulation); theo dõi diễn tiến khiếm khuyết nhận thức đặc biệt trong các trường hợp than phiền giảm nhận thức chủ quan (subjective cognitive impairment), suy giảm nhận thức nhẹ (mild cognitive impairment)."), location = ph_location_type(type = "body"))
#| include: false
ul <- unordered_list(
level_list = c(1, 1, 1,1 ),
str_list = c("Đặt vấn đề", "Đối tượng và phương pháp nghiên cứu", "Kết quả - Bàn luận", "Kết luận"),
style = fp_text(color = "black", font.size = 0) )
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
my_pres <- ph_with(my_pres, value = "Nội dung trình bày", location = ph_location_type(type = "title"))
my_pres <- ph_with(x = my_pres, value = ul,
location = ph_location_type(type = "body") )
#| include: false
ul <- unordered_list(
level_list = c(1, 2,  1, 2, 2),
str_list = c("Câu hỏi nghiên cứu", "Giá trí chẩn đoán và điều trị bộ test là gì?", "Mục tiêu", "Nghiên cứu mối tương quan của thang điểm MMSE với các test thần kinh nhận thức khác trong bộ Test thần kinh nhận thức tại Bệnh viện 30-4.", "Đánh giá hiệu quả ứng dụng của bộ Test thần kinh nhận thức trong chẩn đoán và điều trị Sa sút trí tuệ tại Bệnh viện 30-4"),
style = fp_text(color = "black", font.size = 0) )
my_pres  <- add_slide(my_pres , layout = "Title and Content", master = "Office Theme")
my_pres <- ph_with(my_pres, value = "Câu hỏi NC, mục tiêu", location = ph_location_type(type = "title"))
my_pres <- ph_with(x = my_pres, value = ul,
location = ph_location_type(type = "body") )
layout_summary(my_pres)
layout_properties(my_pres, layout = "Two Content", master = "Office Theme")
install.packages("pubmed2bib")
librarry(pbmed2bib)
librarry(pbmed2bib)
install.packages("here")
library(pbmed2bib)
library(pbmed2bib)
install.packages("pbmed2bib")
library(pbmed2bib)
library(pbmed2bib)
install.packages("rbibutils")
library(rbibutils)
library(here)
bib_convert(
infile = here("Downloads", "22507355.nbib"),
outfile = here("Downloads", "outputfile.bib"),
informat = "nbib",
outformat = "bib"
)
library(rbibutils)
library(here)
bib_convert(
infile = here("Downloads", "22507355.nbib"),
outfile = here("Downloads", "outputfile.bib"),
informat = "nbib",
outformat = "bib"
)
install.packages("rbibutils", type = "source")
library(rbibutils)
library(here)
bib_convert(
infile = here("Downloads", "22507355.nbib"),
outfile = here("Downloads", "outputfile.bib"),
informat = "nbib",
outformat = "bib"
)
library(rbibutils)
library(rbibutils)
library(here)
rbibutils::bib_convert(
infile = here("tai_liem_tham_khao", "22507355.nbib"),
outfile = here("tai_liem_tham_khao", "outputfile.bib"),
informat = "nbib",
outformat = "bib"
)
file.exists(here("tai_liem_tham_khao", "22507355.nbib"))
library(rbibutils)   # Tải thư viện chuyển đổi định dạng trích dẫn
library(here)        # Tạo đường dẫn tương đối an toàn
# Chuyển đổi file NBIB thành BibTeX
rbibutils::bib_convert(
infile = here("tai_liem_tham_khao", "22507355.nbib"),      # File đầu vào
outfile = here("tai_liem_tham_khao", "outputfile.bib"),    # File đầu ra
informat = "nbib",                                          # Định dạng đầu vào
outformat = "bib"                                           # Định dạng đầu ra
)
library(rbibutils)   # Tải thư viện chuyển đổi định dạng trích dẫn
library(here)        # Tạo đường dẫn tương đối an toàn
# Chuyển đổi file NBIB thành BibTeX
rbibutils:::bib_convert(
infile = here("tai_liem_tham_khao", "22507355.nbib"),      # File đầu vào
outfile = here("tai_liem_tham_khao", "outputfile.bib"),    # File đầu ra
informat = "nbib",                                          # Định dạng đầu vào
outformat = "bib"                                           # Định dạng đầu ra
)
library(rbibutils)   # Tải thư viện chuyển đổi định dạng trích dẫn
library(here)        # Tạo đường dẫn tương đối an toàn
rbibutils:::bib_convert(
infile = here("tai_liem_tham_khao", "22507355.nbib"),
outfile = here("tai_liem_tham_khao", "outputfile.bib"),
informat = "nbib",
outformat = "bib"
)
install.packages("pubmed2bib")
install.packages("pubmed2bib")
Warning in install.packages :
install.packages("remotes")
remotes::install_github("ikashnitsky/pubmed2bib")
https://cran.r-project.org/doc/manuals/r-patched/R-admin.html#Installing-packages
install.packages("remotes")
remotes::install_github("ikashnitsky/pubmed2bib")
library(pubmed2bib)
remotes::install_github("ikashnitsky/pubmed2bib")
install.packages("citr")
library(remote)
install.packages("remotes")
remotes::install_github("crsh/citr")

---
title: "Cách quản lý citation và kiểm tra citation bị trùng lắp"
author: "Henry Do"
date: today
format:
  html:
    toc: true
    toc-location: right
    code-fold: true
    code-summary: "Hiển thị/Rút gọn mã R"
editor: source
---

## 📦 Nạp thư viện phân tích citation
```{r}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(bib2df, tidyverse, flextable, officer, glue, scales, rvg, forcats, citr)
```

## 📂 Đọc bib file vào dataframe
```{r}
#| echo: true
#| message: false
#| warning: false
#| paged-print: false
# Đọc dữ liệu từ file BibTeX
bib_lines <- readLines("sstt_reference.bib")
bib_line_index <- which(str_detect(bib_lines, "^@"))

# Đọc bib thành dataframe và gắn dòng
tltk <- bib2df("sstt_reference.bib") %>%
  mutate(Line = bib_line_index)

# Kiểm tra độ dài để đảm bảo gắn dòng khớp
stopifnot(length(bib_line_index) == nrow(bib2df("sstt_reference.bib")))

# Thông báo gắn dòng
glue("📎 Gắn thành công số dòng từ file .bib vào {nrow(tltk)} mục.")
```

## 📚 Mô tả danh sách citation từ file BibTeX
```{r}
citation_summary <- tltk %>%
  mutate(
    AUTHOR = map_chr(AUTHOR, ~ if (is.null(.x) || all(is.na(.x))) NA_character_ else str_c(.x, collapse = ", ")),
    EDITOR = map_chr(EDITOR, ~ if (is.null(.x) || all(is.na(.x))) NA_character_ else str_c(.x, collapse = ", ")),
    AUTHOR = str_trunc(AUTHOR, 50),
    TITLE = str_trunc(TITLE, 80),
    YEAR = as.character(YEAR),
    STT = row_number()
  ) %>%
  select(STT, Line, BIBTEXKEY, AUTHOR, EDITOR, TITLE, YEAR, CATEGORY, JOURNAL, PUBLISHER)

glue("📌 Có tổng cộng {nrow(citation_summary)} mục trích dẫn trong file BibTeX.")

flextable::flextable(citation_summary) %>%
  flextable::set_caption("📚 Bảng mô tả các mục trích dẫn từ file BibTeX") %>%
  flextable::autofit()
```

## 📊 Biểu đồ số lượng citation theo năm (YEAR)
```{r}
year_summary <- tltk %>%
  filter(!is.na(YEAR)) %>%
  count(YEAR) %>%
  mutate(percent = n / sum(n) * 100)

ggplot(year_summary, aes(x = factor(YEAR), y = n, fill = factor(YEAR))) +
  geom_col(show.legend = FALSE) +
  geom_text(aes(label = glue("{n} ({round(percent,1)}%)")), vjust = -0.5, size = 3.5) +
  labs(
    title = "Số lượng citation theo năm xuất bản",
    x = "Năm xuất bản",
    y = "Số citation"
  ) +
  theme_minimal()
```

## 📊 Biểu đồ số lượng citation theo loại tài liệu (CATEGORY)
```{r}
category_summary <- tltk %>%
  filter(!is.na(CATEGORY)) %>%
  count(CATEGORY) %>%
  mutate(percent = n / sum(n) * 100)

ggplot(category_summary, aes(x = fct_reorder(CATEGORY, n), y = n, fill = CATEGORY)) +
  geom_col(show.legend = FALSE) +
  geom_text(aes(label = glue("{n} ({round(percent,1)}%)")), hjust = -0.1, size = 3.5) +
  coord_flip() +
  labs(
    title = "Số lượng citation theo loại tài liệu",
    x = "Loại tài liệu (BibTeX)",
    y = "Số lượng"
  ) +
  theme_minimal()
```

## 🔍 Kiểm tra trùng tiêu đề citation
```{r}

duplicated_entries <- tltk %>% filter(duplicated(str_squish(str_to_lower(TITLE))))
glue("🔍 Phát hiện {nrow(duplicated_entries)} mục trích dẫn có tiêu đề bị trùng sau khi chuẩn hóa.")

flextable::flextable(
  duplicated_entries %>% mutate(STT = row_number()) %>% select(STT, Line, BIBTEXKEY, TITLE, YEAR, JOURNAL, DOI, PAGES)
) %>%
  flextable::set_caption("📄 Các mục trích dẫn bị trùng tiêu đề (đã chuẩn hóa)") %>%
  flextable::autofit()
```

## 📊 Các tiêu đề bị trùng (Top 10)
```{r}
title_count <- tltk %>% count(TITLE, sort = TRUE) %>% filter(n > 1)

ggplot(title_count %>% slice_max(n, n = 10),
       aes(x = reorder(TITLE, n), y = n)) +
  geom_col(fill = "tomato") +
  geom_text(aes(label = n), hjust = -0.2, size = 3.5) +
  coord_flip() +
  labs(
    title = "🔁 Các tiêu đề trích dẫn bị trùng (Top 10)",
    x = "Tiêu đề (đã chuẩn hoá)",
    y = "Số lần xuất hiện"
  ) +
  theme_minimal()
```

## 🔥 Heatmap tiêu đề trùng theo năm
```{r}
heat_data <- tltk %>% count(TITLE, YEAR) %>% filter(n > 1)

ggplot(heat_data, aes(x = factor(YEAR), y = fct_reorder(TITLE, n), fill = n)) +
  geom_tile(color = "white") +
  geom_text(aes(label = n), color = "black", size = 3) +
  scale_fill_gradient(low = "lightyellow", high = "red") +
  labs(
    title = "🔥 Heatmap các tiêu đề trích dẫn bị trùng theo năm",
    x = "Năm xuất bản",
    y = "Tiêu đề (đã chuẩn hoá)",
    fill = "Số lần trùng"
  ) +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 8))
```

## 🧾 Trùng tiêu đề + năm xuất bản
```{r}
duplicated_title_year <- tltk %>% group_by(TITLE, YEAR) %>% filter(n() > 1) %>% ungroup()

flextable::flextable(duplicated_title_year %>% mutate(STT = row_number()) %>% select(STT, Line, everything()))

glue("🔍 Có {nrow(duplicated_title_year)} mục trùng tiêu đề và năm xuất bản")
```

## 🆔 Trùng mã BIBTEXKEY
```{r}
duplicated_keys <- tltk %>% filter(duplicated(BIBTEXKEY) | duplicated(BIBTEXKEY, fromLast = TRUE))

flextable::flextable(duplicated_keys %>% mutate(STT = row_number()) %>% select(STT, everything()))

glue("⚠️ Có {nrow(duplicated_keys)} mục có BIBTEXKEY trùng nhau!")
```

## 💡 Gợi ý giữ hoặc loại citation nào

```{r}
recommend_keep <- duplicated_entries %>%
  group_by(TITLE) %>%
  arrange(desc(!is.na(DOI)), desc(!is.na(JOURNAL)), desc(YEAR)) %>%
  slice(1) %>%
  ungroup()

recommend_drop <- duplicated_entries %>%
  filter(!BIBTEXKEY %in% recommend_keep$BIBTEXKEY)
```

### 📌 Danh sách BIBTEXKEY nên loại bỏ
```{r}
drop_keys <- recommend_drop$BIBTEXKEY
glue("🗑️ Danh sách BIBTEXKEY nên loại bỏ (tổng cộng {length(drop_keys)} mục):")
drop_keys
```

### 💾 Xuất danh sách BIBTEXKEY cần loại bỏ ra file
```{r}
# Xuất danh sách BIBTEXKEY cần loại bỏ
writeLines(drop_keys, "bibtexkey_loai_bo.txt")
write_csv(tibble(BIBTEXKEY = drop_keys), "bibtexkey_loai_bo.csv")
glue("✅ Đã xuất danh sách {length(drop_keys)} BIBTEXKEY cần loại bỏ ra 2 file: bibtexkey_loai_bo.txt và bibtexkey_loai_bo.csv")

# Hiển thị bảng citation nên giữ lại
flextable(recommend_keep %>% mutate(STT = row_number()) %>% select(STT, Line, BIBTEXKEY, TITLE, YEAR, JOURNAL, DOI)) %>%
  set_caption("✅ Gợi ý giữ lại các citation tốt nhất (có DOI, tạp chí, năm mới hơn)") %>%
  colformat_int(j = "Line", prefix = "📄 Dòng ") %>%
  color(i = ~ Line > 500, j = "Line", color = "red") %>%
  add_footer_lines("📌 Bạn có thể tra cứu dòng này trực tiếp trong file .bib") %>%
  autofit()

# Hiển thị bảng citation nên loại bỏ
flextable(recommend_drop %>% mutate(STT = row_number()) %>% select(STT, Line, BIBTEXKEY, TITLE, YEAR, JOURNAL, DOI)) %>%
  set_caption("🗑️ Gợi ý loại bỏ các citation trùng kém ưu tiên hơn") %>%
  colformat_int(j = "Line", prefix = "📄 Dòng ") %>%
  color(i = ~ Line > 500, j = "Line", color = "red") %>%
  add_footer_lines("📌 Bạn có thể tra cứu dòng này trực tiếp trong file .bib") %>%
  autofit()
```

### ✨ Gợi ý tiêu chí loại bỏ

- Không có DOI hoặc ISSN rõ ràng 📉
- Không rõ nguồn (JOURNAL trống hoặc nghi ngờ) ❓
- Năm xuất bản cũ hơn bản khác có cùng tiêu đề ⏳
- BIBTEXKEY không nhất quán (tự động sinh hoặc ký hiệu tạm) 🧩

> 👉 Bạn có thể kiểm tra thủ công trước khi loại bỏ để tránh mất trích dẫn quan trọng.

## 🧹 Loại bỏ trùng lặp và xuất file sạch

## 📊 Tóm tắt số lượng trích dẫn trùng lặp
```{r}
tong_hop_trung <- tibble(
  Loai = c(
    "Trùng tiêu đề",
    "Trùng tiêu đề + năm",
    "Trùng BIBTEXKEY",
    "Đề xuất loại bỏ"
  ),
  So_luong = c(
    nrow(duplicated_entries),
    nrow(duplicated_title_year),
    nrow(duplicated_keys),
    length(drop_keys)
  )
)

flextable(tong_hop_trung) %>%
  set_caption("📊 Tóm tắt số lượng các loại trích dẫn bị trùng hoặc đề xuất loại bỏ") %>%
  autofit()

# Biểu đồ tổng hợp
library(ggplot2)
ggplot(tong_hop_trung, aes(x = fct_reorder(Loai, So_luong), y = So_luong, fill = Loai)) +
  geom_col(show.legend = FALSE) +
  geom_text(aes(label = So_luong), hjust = -0.1, size = 4) +
  coord_flip() +
  labs(title = "📊 Biểu đồ tổng hợp số lượng trích dẫn trùng lặp", x = NULL, y = "Số lượng") +
  theme_minimal()

# Nhận xét tự động
most_common <- tong_hop_trung %>% arrange(desc(So_luong)) %>% slice(1)
least_common <- tong_hop_trung %>% arrange(So_luong) %>% slice(1)

if (nrow(tong_hop_trung) > 0) {
  glue("📌 Loại trùng phổ biến nhất là '{most_common$Loai}' với {most_common$So_luong} mục.
")
  glue("📌 Loại ít gặp nhất là '{least_common$Loai}' với {least_common$So_luong} mục.
")
}
```
```


### 🧼 Tự động loại bỏ các citation theo gợi ý
```{r}
# Xoá các citation có BIBTEXKEY nằm trong danh sách cần loại bỏ
tltk_cleaned <- tltk %>% filter(!BIBTEXKEY %in% drop_keys)

# Kiểm tra lại tổng số sau khi loại bỏ
glue("✅ Sau khi loại bỏ, còn lại {nrow(tltk_cleaned)} mục citation hợp lệ.")
```

### 💾 Xuất file BibTeX đã làm sạch
```{r}
df2bib(tltk_cleaned, file = "cleaned_references_final.bib")
glue("📁 Đã lưu file BibTeX sạch tên 'cleaned_references_final.bib'")
```
```{r}
tltk_unique <- tltk %>% distinct(TITLE, .keep_all = TRUE)
tltk_unique2 <- tltk %>% distinct(TITLE, YEAR, .keep_all = TRUE)
df2bib(tltk_unique, file = "cleaned_references.bib")
```
